# -*- coding:utf-8 -*-
# 作   者：Ailian
# 开发时间：2022/4/28 上午11:32

"""
1. 函数定义默认参数值
    函数定义时，给形参设置默认值，只有与默认值不符时，才需要传递实参

2. 个数可变的位置参数
    定义函数时，可能无法事先确定传递的位置实参的个数时，使用可变的位置形参
    使用 * 定义个数可变的位置形参
    结果为一个元组

3. 个数可变的关键字参数
    定义参数的时候，无法事先确定传递的关键字实参的个数时，使用可变的关键字形参
    使用 ** 定义个数可变的关键字形参
    结果为一个字典
"""


def fun(a, b=12):  # b 称为默认值参数
    print(a, b)


# 函数调用
fun(100)  # 100 12
fun(20, 30)  # 20 30


def fun_1(*args):  # 函数定义时的 可变的位置参数
    print(args)
    print(args[0])


fun_1(10)  # 10
fun_1(10, 30)  # （10, 30)  10
fun_1(30, 385, 293, (10, 39))  # (30, 385, 293, (10, 39))  30


def fun_2(**args):  # 函数定义时的 可变的关键字参数
    print(args)


fun_2(a=10)  # {'a': 10}
fun_2(a=20, b=45, c=56)  # {'a': 20, 'b': 45, 'c': 56}


def fun_3(a, b, *, c, d):  # 从 * 之后的参数，在函数调用时，只能采用关键字实参传递
    print("a=", a)
    print("b=", b)
    print("c", c)
    print("d=", d)


# 调用函数
fun_3(a=10, b=20, c=30, d=40)  # 关键字传参
fun_3(11, 22, c=33, d=44)  # 前两个参数采用位置实参传递，而 c,d 采用关键字实参传递


"""
函数定义时的形参的传递顺序问题
"""
# def fun_4(a, b, *, c, d, *args, **kwargs):  # 错误的，* 之后，不能出现 *args
#     pass
def fun_4(a, b, *, c, d, **kwargs):
    pass


def fun_5(*args, **kwargs):
    pass


def fun_6(a, b=10, *args, **kwargs):
    pass


