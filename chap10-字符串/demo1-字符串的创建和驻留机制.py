# -*- coding:utf-8 -*-
# 作   者：Ailian
# 开发时间：2021/5/16 上午11:55

"""
在python中，字符串是一个基本数据类型，是一个不可变的字符串序列
字符串驻留机制：
    仅保存一份相同且不可变字符串的方法，不同的值被存放在字符串的驻留池中，python的驻留机制
    对相同的字符串只保留一份拷贝，后续创建相同的字符串时，不会开辟新空间，而是把这个字符串的
    地址赋给新创建的变量
"""

a = 'python'
b = "python"
c = """python"""

print(a, id(a))
print(b, id(b))
print(c, id(c))
# 由此可见，就只开辟了 "python" 字符串的一块空间，然后将 "python" 指向其他新创建的变量，并没有新开辟 "python" 内存空间

"""
字符串驻留机制的几种情况（命令行交互模式）
    ① 字符串的长度为0或者1时
        a. 字符串长度为0
        >>> s1 = ''
        >>> s2 = ''
        >>> s1 is s2
        True
        b. 字符串长度为1，且不是标识符
        >>> s1 = '%'
        >>> s2 ='%'
        >>> s1 is s2
        True
        c. 字符串长度为2，且不是标识符
        >>> s1 = 'a&'
        >>> s2 = 'a&'
        >>> s1 is s2
        False
        d. 字符串长度为1，字符串不是标识符，为中文
        >>> s1 = '是'
        >>> s2 = '是'
        >>> s1 is s2
        False
        
    ② 符合标识符的字符串(数字、字母、下划线)
        a. 字符串是英文
        >>> s = 'acd'
        >>> s2 = 'acd'
        >>> s is s2
        True
        b. 字符串是数字
        >>> s1 = '126'
        >>> s2 = '126'
        >>> s1 is s2
        True
        c. 字符串是下划线
        >>> s1 = '__'
        >>> s2 = '__'
        >>> s1 is s2
        True
        d. 字符串是下划线、数字、英文混合        
        >>> s1 = 'a_1'
        >>> s2 = 'a_1'
        >>> s1 is s2
        True

    ③ 字符串只在编译时进行驻留，而非运行时
        >>> a = 'abc'
        >>> b = 'ab'+'c'  # b的值是在运行前就已经连接完毕了
        >>> c = ''.join(['ab', 'c'])  # c的值是在程序运行过程中通过.join()方法对列表中的数据进行拼接起来的，程序在运行过程中会开辟新的空间去存储'abc'
        >>> a is b
        True
        >>> a is c
        False
        >>> c
        'abc'
        >>> type(c)
        <class 'str'>
        >>> a
        'abc'
        >>> type(a)
        <class 'str'>

    ④ [-5, 256]之间的整数数字
        >>> a = -5
        >>> b = -5
        >>> a is b
        True
        
        >>> a = -6 
        >>> b = -6
        >>> a is b
        False
        
        >>> a = 256
        >>> b = 256
        >>> a is b
        True
        
        >>> a = 257
        >>> b = 257
        >>> a is b
        False

sys模块中的 intern() 方法可以强制 2个字符串 指向同一个对象
    >>> import sys
    >>> a = 'abc%'
    >>> b = 'abc%'
    >>> a is b
    False
    >>> a = sys.intern(b)  # 将a、b强制驻留
    >>> a is b
    True

pycharm对字符串进行了优化处理：强制将字符串驻留，即相同的字符串只存储一次，后续直接将 字符串 赋值给新建的变量
"""

"""
字符串驻留机制的优缺点
    当需要值相同的字符串，可以直接从字符串池里拿来使用，避免频繁的创建和销毁，提升效率和节省空间，因此拼接字符串和修改字符串是会比较影响性能的
    在需要进行字符串拼接时建议使用str类型的 join()方法，而非 + ，因为 join()方法是先计算出所有字符中的长度，然后再拷贝，只会创建一次对象，效率要比 + 高
    join()方法是用指定的字符串将 序列中的元素拼接起来生成一个新的字符串，例如
        a = '_'
        b = ('a', 'b', 'c')
        a.join(b)  # 用 '_' 将 b 序列中的元素拼接起来
        执行结果：a_b_c
"""

a = 'A' + '_' + 'a' + '_' + 'b'
b = '_'.join(["A", 'a', 'b'])
print(a)
print(b)
