# -*- coding:utf-8 -*-
# 作   者：Ailian
# 开发时间：2021/5/15 下午10:51

"""
为什么要把元组设计成不可变序列？
    在多任务环境下，同时操作对象不需要加锁，因此，在程序中尽量使用不可变序列
        多任务环境：比如有块个数据，支持用户去操作它
        ① 在多任务环境下，如果数据是一个可变对象，当大家同时去操作同一个数据，那么就会很乱。
            解决方法：当第一个用户进去操作数据的时候，就把程序给锁上，其他用户就操作不了，保证数据的安全
        ② 在多任务环境下，如果数据是一个不可变对象，用户可以查看、取数据，但是不能去增删改数据
            这种数据设计方法就不需要加锁，也不会对数据造成破坏
注意事项：元组中存储对象的引用
    ① 如果元组中的对象本身是不可变对象，则不能再引用其他对象（即 id 不可以再指向其他对象）
    ② 如果元组中的对象本身是可变对象，则可变对象的引用不允许改变，但是数据可以改变（即 id 不可以指向其他对象，但是 其里面的数据可以被修改）

"""

t = (10, [30, 20], 9)
print(t, type(t))
print(t[0], type(t[0]), id(t[0]))
print(t[1], type(t[1]), id(t[1]))
print(t[2], type(t[2]), id(t[2]))

"""尝试将t[1]修改为 100  """
# print(id(100))
# t[1] = 100  # 元组是不允许修改元素的
# 报错：TypeError: 'tuple' object does not support item assignment

"""由于 [30, 20] 是列表，列表是可变序列，所以可以向列表中添加元素，而列表的内存地址不变"""
t[1].append(100)  # 向列表中添加元素 100
print(t[1], type(t[1]), id(t[1]))